name: New Branch Created

on:
  create
env:
  GH_TOKEN: ${{ secrets.GHPROJECT_TOKEN }}
  OWNER: "kuhlekt1v"
  REPO: "test-action"
  
jobs:
  Check-Branch-Name:
    runs-on: ubuntu-latest
    outputs:
      issue_num: ${{ steps.step1.outputs.issue_num }}
      tracked: ${{ steps.step1.outputs.tracked }}
    steps:
      - name: Get Created Issue Number
        id: step1
        run: |
          branch_name=`echo '${{github.event.ref}}'`
          issue_num=$(echo "${branch_name}" | grep -oP '#\d+' | cut -c 2-)
          re='^[0-9]+$'
          if [[ $issue_num =~ $re ]] ; then
            echo "tracked=true" >> $GITHUB_OUTPUT
          else
            echo "tracked=false" >> $GITHUB_OUTPUT
          fi
            echo "issue_num=$issue_num" >> $GITHUB_OUTPUT
      - name: Print Output Variables
        run: |
          echo "Tracked: ${{ steps.step1.outputs.tracked}}"
          echo "Issue: ${{ steps.step1.outputs.issue_num}}"
  Add-Linked-Issue-To-Project:
    needs: Check-Branch-Name
    if: needs.Check-Branch-Name.outputs.tracked == 'true'
    env:
      ISSUE_NUM: $ {{ needs.Check-Branch-Name.outputs.issue_num }}
    runs-on: ubuntu-latest
    steps: 
      - name: Get Issue $ {{ env.ISSUE_NUM }} Project Item ID
        run: |
          gh api graphql -f query='query FindIssueID($user: String! $repo: String! $number: Int!) {
            repository(owner:"${{ env.OWNER}}",name:"${{ env.REPO}}") {
              issue(number:${{env.ISSUE_NUM}}) {
                id,
                state
              }
            }
          }' > project_data.json
          echo 'ISSUE_ID='
           $(jq '.data.repository.issue.id' project_data.json) >> $GITHUB_ENV
      
